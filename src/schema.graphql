# import * from './generated/prisma.graphql'
type SuccessMessage {
  message: String!
}

input PlayerInput {
  id: ID!
  username: String
}

type Subscription {
  gameEvent(gameId: ID!): GameEventSubscriptionPayload!
  game(where: GameSubscriptionWhereInput): GameSubscriptionPayload!
}

type Mutation {
  createGame(
    name: String!
    radioMilestone: Boolean
    cfoMilestone: Boolean
    currentTurn: Int
    currentPhase: String
    players: [PlayerInput]!
  ): Game!
  signup(email: String!, password: String!, username: String!): User!
  signin(email: String!, password: String!): User!
  signout: SuccessMessage
  requestReset(email: String!): SuccessMessage
  resetPassword(password: String!, resetToken: String!): User!
  createGameEvent(type: GameEventType!, gameId: ID!): GameEvent!
  updateGame(id: ID!, name: String): Game!
}

type Query {
  games: [Game]
  game(where: GameWhereUniqueInput!): Game
  me: User
  usersByUsername(searchValue: String!): [User]
}

type User {
  id: ID!
  username: String!
  email: String!
  permissions: [Permission!]!
}

type Game {
  id: ID!
  name: String!
  events: [GameEvent]
  radioMilestone: Boolean
  cfoMilestone: Boolean
  currentTurn: Int
  currentPhase: String
  updatedAt: DateTime!
  players: [User]!
}
